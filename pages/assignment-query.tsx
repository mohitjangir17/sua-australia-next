import { findSourceMap } from "module";
import Head from "next/head";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import AppContext from "../components/AppContext";
import HeaderOtherPages from "../components/HeaderOtherPages";
import HeadImage from "../public/resources/questions-answers.jpg";
import styles from "../styles/AssignmentQuery.module.css";
import homestyles from "../styles/Home.module.css";

export default function AssignmentQuery() {
  // interface FormData {
  //   firstName: string;
  //   lastName: string;
  //   email: string;
  //   contact: string;
  //   subject: string;
  //   title: string;
  //   description: string;
  //   words: string;
  //   deadline: string;
  //   file: string;
  // }

  // useEffect(function () {
  //   // JSON.parse(window.localStorage.getItem)
  //   if (window.localStorage.getItem("firsName") == "Mohit") {
  //     console.log("Empty");
  //   } else {
  //     console.log(window.localStorage);
  //   }

  //   const localFirstName: string =
  //     window.localStorage.getItem("firstName") || "";
  //   const localLastName: string = window.localStorage.getItem("lastName") || "";
  //   const localsubject: string = window.localStorage.getItem("subject") || "";
  //   const localemail: string = window.localStorage.getItem("email") || "";
  //   setValue({
  //     firstName: localFirstName,
  //     lastName: localLastName,
  //     subject: localsubject,
  //     email: localemail,
  //   });
  // }, []);

  const context = useContext(AppContext);
  const formInitialValue = {
    firstName: "",
    lastName: "",
    email: "",
    contact: "",
    subject: "",
    title: "",
    description: "",
    words: "",
    deadline: "",
    file: null,
  };

  const [getValue, setValue] = useState({
    ...formInitialValue,
    // firstName: context.input.firstName,
    // lastName: context.input.lastName,
    // email: context.input.email,
    // subject: context.input.subject,
  });

  // console.log(context.input);

  function handleChange(evt: any) {
    const { value } = evt.target;

    setValue({
      ...getValue,
      [evt.target.name]: evt.target.name === "file" ? evt.target.files : value,
    });
  }

  // const [uploadStatus, setUploadStatus] = useState(UploadStatus.none);

  // function handleSubmit(e: FormEvent) {
  //   e.preventDefault();
  //   uploadAssignment(getValue)
  //     .then(() => {
  //       setUploadStatus(UploadStatus.success);
  //       setTimeout(() => {
  //         setUploadStatus(UploadStatus.none);
  //       }, 5000);
  //       setValue(formInitialValue);
  //     })
  //     .catch((error) => {
  //       console.error(error);
  //       setUploadStatus(UploadStatus.failed);
  //       setTimeout(() => {
  //         setUploadStatus(UploadStatus.none);
  //       }, 5000);
  //     });
  // }
  return (
    <>
      <Head>
        <title>Assignment Query | SUA-Australia</title>
        <meta name="Assignment Query" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HeaderOtherPages headerImage={HeadImage} title="Assignment Query" />
      <main className={homestyles.mainContainer}>
        <div className={styles.Upload}>
          <form action="" method="post">
            <h1 className={styles.goodGrades}>Need Good Grades?</h1>
            <p className={styles.goodGradesP}>GET SOLUTION NOW!</p>
            <div className={styles.splitFields}>
              {" "}
              <div>
                <label htmlFor="fistname">Firstname</label> <br />
                <input
                  type="text"
                  name="firstName"
                  value={getValue.firstName}
                  placeholder="Your Firstname"
                  // onChange={(e) => setFirstName(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="lastname">Lastname</label> <br />
                <input
                  type="text"
                  name="lastName"
                  value={getValue.lastName}
                  placeholder="Your Lastname"
                  // onChange={(e) => setLastName(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="email">Email address</label> <br />
                <input
                  type="text"
                  name="email"
                  value={getValue.email}
                  placeholder="Your Email"
                  // onChange={(e) => setEmail(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="contact">Contact</label> <br />
                <input
                  type="tel"
                  name="contact"
                  value={getValue.contact}
                  placeholder="Your Contact Number"
                  // onChange={(e) => setContact(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
            </div>

            <div className={styles.splitFields}>
              <div>
                <label htmlFor="subject">Subject</label> <br />
                <input
                  type="text"
                  name="subject"
                  value={getValue.subject}
                  placeholder="Query Subject"
                  // onChange={(e) => setSubject(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="title">Title</label> <br />
                <input
                  type="text"
                  name="title"
                  value={getValue.title}
                  placeholder="Title"
                  // onChange={(e) => setTitle(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="description">Description</label> <br />
                <input
                  type="text"
                  name="description"
                  value={getValue.description}
                  placeholder="Description"
                  onChange={handleChange}
                />{" "}
                <br />
              </div>{" "}
              <div>
                <label htmlFor="words">Words</label> <br />
                <input
                  type="number"
                  name="words"
                  value={getValue.words}
                  placeholder="Words"
                  // onChange={(e) => setWords(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div>
                <label htmlFor="deadline">Deadline</label> <br />
                <input
                  type="date"
                  name="deadline"
                  value={getValue.deadline}
                  placeholder="Deadline"
                  // onChange={(e) => setDeadline(e.target.value)}
                  onChange={handleChange}
                />{" "}
                <br />
              </div>
              <div className="fileUploadSection">
                <label htmlFor="upload">Upload File</label> <br />
                <input
                  type="file"
                  name="fileupload"
                  // value={deadline}
                  placeholder="Upload Your File"
                  // onChange={(e) => setDeadline(e.target.value)}
                />{" "}
                <br />
              </div>
            </div>
            <button>Get Help</button>
          </form>
        </div>
      </main>
    </>
  );
}
